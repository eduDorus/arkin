services:
  postgres:
    container_name: arkin-postgres
    image: postgres:17
    hostname: postgres
    environment:
      POSTGRES_DB: arkin
      POSTGRES_USER: arkin_admin
      POSTGRES_PASSWORD: test1234
    ports:
      - "5432:5432"
    volumes:
      - /mnt/data/postgres/data:/var/lib/postgresql/data
      - /mnt/data/postgres/logs:/var/logs
    networks:
      - network
    restart: unless-stopped


  clickhouse:
    container_name: arkin-clickhouse
    image: clickhouse/clickhouse-server:25.7
    hostname: clickhouse
    ports:
      - "8123:8123"   # HTTP interface
      - "9000:9000"   # Native client interface
    volumes:
      - /mnt/data/clickhouse/data:/var/lib/clickhouse
      - /mnt/data/clickhouse/config:/etc/clickhouse-server
      - /mnt/data/clickhouse/logs:/var/log/clickhouse-server
    environment:
      CLICKHOUSE_DB: arkin
      CLICKHOUSE_USER: arkin_admin
      CLICKHOUSE_PASSWORD: test1234
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: "1"  # Enable default access management
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    networks:
      - network
    restart: unless-stopped
  

  grafana:
    container_name: arkin-grafana
    image: grafana/grafana-oss:12.1.1
    hostname: grafana
    ports:
      - "3000:3000"
    volumes:
      - /mnt/data/grafana:/var/lib/grafana
    networks:
      - network
    depends_on:
      - clickhouse
      - postgres
    restart: unless-stopped
  
  triton:
    container_name: arkin-triton
    image: nvcr.io/nvidia/tritonserver:25.08-py3
    hostname: triton
    ports:
      - "8000:8000"  # HTTP endpoint
      - "8001:8001"  # gRPC endpoint
      - "8002:8002"  # Metrics endpoint
    volumes:
      - /home/dj/repos/arkin-inference/triton:/models
    command: tritonserver --model-repository=/models --model-control-mode=poll --repository-poll-secs=60
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - network
    restart: unless-stopped

        
  arkin-binance-ingestor-1:
    container_name: arkin-binance-ingestor-1
    image: arkin:v1.0.0  
    hostname: arkin-binance-ingestor-1
    command: ["./main", "ingestor",  "-i", "BTCUSDT,ETHUSDT,SOLUSDT,BNBUSDT,XRPUSDT,TRXUSDT,DOGEUSDT,ADAUSDT,LINKUSDT,XLMUSDT,HBARUSDT,AVAXUSDT,LTCUSDT"]
    environment:
      - RUST_LOG=info,persistence=warn
      - CONFIG_DIR=/app/configs
      - RUN_MODE=prod 
    volumes:
      - /home/dj/repos/arkin/configs:/app/configs:ro  
    networks:
      - network
    depends_on:
      - triton
      - clickhouse
      - postgres
    restart: unless-stopped


  arkin-binance-ingestor-2:
    container_name: arkin-binance-ingestor-2
    image: arkin:v1.0.0
    hostname: arkin-binance-ingestor-2
    command: ["./main", "ingestor",  "-i", "BTCUSDT,ETHUSDT,SOLUSDT,BNBUSDT,XRPUSDT,TRXUSDT,DOGEUSDT,ADAUSDT,LINKUSDT,XLMUSDT,HBARUSDT,AVAXUSDT,LTCUSDT"]
    environment:
      - RUST_LOG=info,persistence=warn
      - CONFIG_DIR=/app/configs
      - RUN_MODE=prod  
    volumes:
      - /home/dj/repos/arkin/configs:/app/configs:ro  
    networks:
      - network
    depends_on:
      - triton
      - clickhouse
      - postgres
    restart: unless-stopped


  # arkin-agent:
  #   container_name: arkin-agent
  #   image: arkin:v1.0.0  # Replace with your image name, e.g., arkin:1.0 or a registry path
  #   hostname: arkin-agent
  #   command: ["./main", "agent", "-n", "agent-v2", "-i", "BTCUSDT", "-p", "v1.6.0", "-w", "720", "--tick-frequency", "60"]
  #   environment:
  #     - RUST_LOG=info
  #     - CONFIG_DIR=/app/configs
  #     - RUN_MODE=dev  # Changed to prod for production
  #     - API_KEY=ppCYOYKlKLRVwGCzmcbXNf2Qn34aeDEN36A4I0Fwdj8WmpvfkxO9cmNIx5PwhmOd
  #     - API_SECRET=cs4wa0w860lgkViblUzua4ThRXpfD22ruG8d0GytU7fIrJCvz8jvCAzKpaKPwTl0
  #   volumes:
  #     - /home/dj/repos/arkin/configs:/app/configs:ro  # Mount configs as read-only
  #     - /home/dj/repos/arkin/scalers:/app/scalers:ro  # Mount scalers as read-only
  #   networks:
  #     - network
  #   depends_on:
  #     - triton
  #     - clickhouse
  #     - postgres
  #   restart: unless-stopped

networks:
  network:
    driver: bridge
