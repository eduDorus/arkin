/*
 * Binance Derivatives Trading USDS Futures WebSocket Market Streams
 *
 * OpenAPI Specification for the Binance Derivatives Trading USDS Futures WebSocket Market Streams
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#![allow(unused_imports)]
use crate::derivatives_trading_usds_futures::websocket_streams::models;
use serde::{Deserialize, Deserializer, Serialize, de::Error};
use serde_json::Value;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AllMarketLiquidationOrderStreamsResponseO {
    #[serde(rename = "s", skip_serializing_if = "Option::is_none")]
    pub s: Option<String>,
    #[serde(rename = "S", skip_serializing_if = "Option::is_none")]
    pub s_uppercase: Option<String>,
    #[serde(rename = "o", skip_serializing_if = "Option::is_none")]
    pub o: Option<String>,
    #[serde(rename = "f", skip_serializing_if = "Option::is_none")]
    pub f: Option<String>,
    #[serde(rename = "q", skip_serializing_if = "Option::is_none")]
    pub q: Option<String>,
    #[serde(rename = "p", skip_serializing_if = "Option::is_none")]
    pub p: Option<String>,
    #[serde(rename = "ap", skip_serializing_if = "Option::is_none")]
    pub ap: Option<String>,
    #[serde(rename = "X", skip_serializing_if = "Option::is_none")]
    pub x_uppercase: Option<String>,
    #[serde(rename = "l", skip_serializing_if = "Option::is_none")]
    pub l: Option<String>,
    #[serde(rename = "z", skip_serializing_if = "Option::is_none")]
    pub z: Option<String>,
    #[serde(rename = "T", skip_serializing_if = "Option::is_none")]
    pub t_uppercase: Option<i64>,
}

impl AllMarketLiquidationOrderStreamsResponseO {
    #[must_use]
    pub fn new() -> AllMarketLiquidationOrderStreamsResponseO {
        AllMarketLiquidationOrderStreamsResponseO {
            s: None,
            s_uppercase: None,
            o: None,
            f: None,
            q: None,
            p: None,
            ap: None,
            x_uppercase: None,
            l: None,
            z: None,
            t_uppercase: None,
        }
    }
}
