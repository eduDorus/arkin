services:
  postgres:
    image: postgres:17
    container_name: arkin-postgres
    hostname: postgres
    environment:
      POSTGRES_DB: arkin
      POSTGRES_USER: arkin_admin
      POSTGRES_PASSWORD: test1234
    ports:
      - "5432:5432"
    volumes:
      - /Users/dj/repos/arkin/data/postgres/data:/var/lib/postgresql/data
      - /Users/dj/repos/arkin/data/postgres/logs:/var/logs
    networks:
      - network
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:12.0.2
    container_name: arkin-grafana
    hostname: grafana
    ports:
      - "3000:3000"
    volumes:
      - /Users/dj/repos/arkin/data/grafana:/var/lib/grafana
    networks:
      - network
    restart: unless-stopped

  clickhouse:
    image: clickhouse/clickhouse-server:25.6
    container_name: arkin-clickhouse
    hostname: clickhouse
    ports:
      - "8123:8123"   # HTTP interface
      - "9000:9000"   # Native client interface
    volumes:
      - /Users/dj/repos/arkin/data/clickhouse/data:/var/lib/clickhouse
      - /Users/dj/repos/arkin/data/clickhouse/config:/etc/clickhouse-server
      - /Users/dj/repos/arkin/data/clickhouse/logs:/var/log/clickhouse-server
    environment:
      CLICKHOUSE_DB: arkin
      CLICKHOUSE_USER: arkin_admin
      CLICKHOUSE_PASSWORD: test1234
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: "1"  # Enable default access management
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    networks:
      - network
    restart: unless-stopped
  
  triton:
    image: nvcr.io/nvidia/tritonserver:25.06-pyt-python-py3
    container_name: arkin-triton
    hostname: triton
    ports:
      - "8000:8000"  # HTTP endpoint
      - "8001:8001"  # gRPC endpoint
      - "8002:8002"  # Metrics endpoint
    volumes:
      - /Users/dj/repos/arkin-research/trition-server:/models
    command: tritonserver --model-repository=/models --model-control-mode=poll --repository-poll-secs=60
    networks:
      - network
    restart: unless-stopped

        
  # arkin-binance-ingestor:
  #  image: arkin:v1.0.0  # Replace with your image name, e.g., arkin:1.0 or a registry path
  #  container_name: arkin-binance-ingestor
  #  hostname: arkin-binance-ingestor
  #  command: ["./main", "ingestor", "-i", "binance", "--instruments", "BTCUSDT,ETHUSDT,SOLUSDT"]
  #  environment:
  #    - RUST_LOG=info
  #    - CONFIG_DIR=/app/configs
  #    - RUN_MODE=prod  # Changed to prod for production
  #  volumes:
  #    - /Users/dj/repos/arkin/mnt/data/arkin/configs:/app/configs:ro  # Mount configs as read-only
  #  networks:
  #    - network
  #  restart: unless-stopped

networks:
  network:
    driver: bridge
